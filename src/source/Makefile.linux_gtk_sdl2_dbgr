#
# Gtk+ + SDL2
# for linux 
#
export

include mk_deps.mk

CORE_TYPE:=CORE_TYPE_GTK_SDL
GUI_TYPE:=GUI_TYPE_GTK_X11

SUBCPU_CARD:=

BUILDDIR_BASE:=./build
SH_BUILDDIR:=$(BUILDDIR_BASE)/shared_gtk_sdl2_dbgr
ST_BUILDDIR:=$(BUILDDIR_BASE)/static_gtk_sdl2_dbgr
DBG_BUILDDIR:=$(BUILDDIR_BASE)/debug_gtk_sdl2_dbgr

SH_INSTALLDIR:=../ReleaseSHGtkSdl2Dbgr
ST_INSTALLDIR:=../ReleaseSTGtkSdl2Dbgr
DBG_INSTALLDIR:=../DebugSTGtkSdl2Dbgr

CDEFS_BASE:=-D$(VMTARGET) -DUSE_OPENGL -DUSE_GETTEXT -DUSE_DEBUGGER -DUSE_GTK -DUSE_SDL2 -D$(GUI_TYPE)
SH_CDEFS:=$(CDEFS_BASE)
ST_CDEFS:=$(CDEFS_BASE)
DBG_CDEFS:=$(CDEFS_BASE) -D_DEBUG -D_DEBUG_LOG
ifneq ($(SUBCPU_CARD),)
	SH_CDEFS:=$(SH_CDEFS) -DUSE_$(SUBCPU_CARD)
	ST_CDEFS:=$(ST_CDEFS) -DUSE_$(SUBCPU_CARD)
	DBG_CDEFS:=$(DBG_CDEFS) -DUSE_$(SUBCPU_CARD)
endif

GTK_EXIST:=$(shell pkg-config gtk+-3.0; echo $$?)
ifeq ($(GTK_EXIST),1)
GTK_PKG:=gtk+-2.0
else
GTK_PKG:=gtk+-3.0
endif

LOCALINCDIR:=/usr/local/include
SDLLOCALINCDIR:=$(LOCALINCDIR)/SDL2

SH_CFLAGS:=$(ARCH) -Wall -O2 $(shell sdl2-config --cflags) $(shell pkg-config --cflags $(GTK_PKG)) -I$(SDLLOCALINCDIR)
ST_CFLAGS:=$(ARCH) -Wall -O2 $(shell sdl2-config --cflags) $(shell pkg-config --cflags $(GTK_PKG)) -I$(SDLLOCALINCDIR)
DBG_CFLAGS:=$(ARCH) -g -Wall -O0 $(shell sdl2-config --cflags) $(shell pkg-config --cflags $(GTK_PKG)) -I$(SDLLOCALINCDIR)

LOCALLIBDIR:=/usr/local/lib
# SDLLIBS:=$(LOCALLIBDIR)/libSDL2main.a $(LOCALLIBDIR)/libSDL2.a $(LOCALLIBDIR)/libSDL2_ttf.a $(LOCALLIBDIR)/libSDL2_net.a
# SDLLIBS:=$(LOCALLIBDIR)/libSDL2_net.a
SDLLIBS:=

SH_LDFLAGS:=-s $(shell sdl2-config --libs) $(shell pkg-config --libs $(GTK_PKG)) -lSDL2_ttf -lm -lz -lGL -lpthread -lfreetype -lrt -ldl -lX11 -lpng -lasound
ST_LDFLAGS:=-s $(shell sdl2-config --libs) $(shell pkg-config --libs $(GTK_PKG)) -lSDL2_ttf -lm -lz -lGL -lpthread -lfreetype -lrt -ldl -lX11 -lpng -lasound
DBG_LDFLAGS:=$(shell sdl2-config --libs) $(shell pkg-config --libs $(GTK_PKG)) -lSDL2_ttf -lm -lz -lGL -lpthread -lfreetype -lrt -ldl -lX11 -lpng -lasound

LIBS_BASE:=$(SDLLIBS)

SH_LIBS:=
ST_LIBS:=$(LIBS_BASE)
DBG_LIBS:=$(LIBS_BASE)

#
#
#

all: sh_exe

sh_exe: export INSTALLDIR:=$(SH_INSTALLDIR)
sh_exe: export BUILDDIR:=$(SH_BUILDDIR)
sh_exe: export LIBS:=$(SH_LIBS)
sh_exe: export LDFLAGS:=$(SH_LDFLAGS)
sh_exe: export CDEFS:=$(SH_CDEFS)
sh_exe: export CFLAGS:=$(SH_CFLAGS)
sh_exe: export CXXFLAGS:=$(SH_CFLAGS)

st_exe: export INSTALLDIR:=$(ST_INSTALLDIR)
st_exe: export BUILDDIR:=$(ST_BUILDDIR)
st_exe: export LIBS:=$(ST_LIBS)
st_exe: export LDFLAGS:=$(ST_LDFLAGS)
st_exe: export CDEFS:=$(ST_CDEFS)
st_exe: export CFLAGS:=$(ST_CFLAGS)
st_exe: export CXXFLAGS:=$(ST_CFLAGS)

dbg_exe: export INSTALLDIR:=$(DBG_INSTALLDIR)
dbg_exe: export BUILDDIR:=$(DBG_BUILDDIR)
dbg_exe: export LIBS:=$(DBG_LIBS)
dbg_exe: export LDFLAGS:=$(DBG_LDFLAGS)
dbg_exe: export CDEFS:=$(DBG_CDEFS)
dbg_exe: export CFLAGS:=$(DBG_CFLAGS)
dbg_exe: export CXXFLAGS:=$(DBG_CFLAGS)

sh_exe st_exe dbg_exe:
	$(MAKE) -f mk_linux_sdl.mk $(TARGET)

install: sh_install

sh_install st_install dbg_install: export TARGET:=install

sh_install: sh_exe

st_install: st_exe

dbg_install: dbg_exe

clean: sh_clean

sh_clean:
	rm -rf $(SH_BUILDDIR)

st_clean:
	rm -rf $(ST_BUILDDIR)

dbg_clean:
	rm -rf $(DBG_BUILDDIR)

clean_all:
	rm -rf $(BUILDDIR)

